GENERAR FACTORES PRIMOS por Unble Bob

En poscas palabras, esta es una kata fascinante por la forma en la que muestra 
como las declaraciones 'if' se transforman en declaraciones 'while' segun el 
número de test cases aumenta. Es un ejemplo maravilloso de como los algorimos a 
veces se hacen más simples a medida que se implementan de forma más general.

Descubri esta pequeña kata una noche cuando mi hijo hacia 7º curso. El acababa 
de descubrir que todos los números pueden ser divididos en un producto de 
números primos y quería saber más. Así que escribi un pequeño programa en ruby, 
escribiendo los test primero, y me sorprendio como el algoritmo fue 
evolucionando

He realizado esta kata en particular en Java 5.0 . Esto te dará alguna idea
sobre el poder y la conveniencia de algunas de las nuevas caracteristicas.

=========================================

Los Requisitos

Escribe una clase llamada "PrimeFactors" que tenga un metodo estatico: "generate"
El método "generate" toma un entero como argumento y regresa una lista de enteros.
Esta lista contiene los factores primos en orden numerico.

Fuente: http://butunclebob.com/ArticleS.UncleBob.ThePrimeFactorsKata

Definición de factores primos: (http://es.wikipedia.org/wiki/Factores_primos)

En teoría de números, los factores primos de un número entero son los números 
primos divisores exactos de ese número entero. El proceso de búsqueda de esos 
divisores se denomina factorización de enteros, o factorización de primos. 
Para un factor primo p de n, la multiplicidad de p es el máximo exponente a para 
el cual pa es un divisor de n. La factorización un número entero es una lista de 
los factores primos de ese número, junto con su multiplicidad. El Teorema 
fundamental de la Aritmética establece que todo número entero positivo tiene 
una factorización de primos única.

Para un número entero positivo n, el número de factores primos de n y la suma de 
los factores primos de n (sin contar su multiplicidad) son ejemplos de funciones 
aritméticas de n que son funciones aditivas pero no "completamente aditivas".